# .coveragerc configuration file for coverage.py

[run]
source = app
branch = True
omit =
    */tests/*
    */test_*
    */venv/*
    */env/*
    */.venv/*
    */site-packages/*
    */__pycache__/*
    */migrations/*
    app/main.py
    */conftest.py
    setup.py

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

    # Don't complain about TYPE_CHECKING imports
    if TYPE_CHECKING:

    # Don't complain about protocol classes
    class .*\(.*Protocol.*\):

    # Don't complain about debugging code
    if settings.DEBUG

ignore_errors = True
show_missing = True
precision = 2
sort = Cover

# Minimum coverage percentage
fail_under = 60

[html]
directory = htmlcov
title = Tug Backend Coverage Report

[xml]
output = coverage.xml